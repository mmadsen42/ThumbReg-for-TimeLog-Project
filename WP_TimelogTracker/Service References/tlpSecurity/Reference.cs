//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace ThumbReg.tlpSecurity {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIBase", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.ResponseOfTimeRegistrationSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.TimeRegistrationSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.ResponseOfUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.SecurityToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.ResponseOfSecurityToken))]
    public partial class APIBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public partial class Request : ThumbReg.tlpSecurity.APIBase {
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.RequestParameter> ParametersField;
        
        private string ServiceClassField;
        
        private string MethodNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.RequestParameter> Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceClass {
            get {
                return this.ServiceClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceClassField, value) != true)) {
                    this.ServiceClassField = value;
                    this.RaisePropertyChanged("ServiceClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfTimeRegistrationSettings", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public partial class ResponseOfTimeRegistrationSettings : ThumbReg.tlpSecurity.APIBase {
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.TimeRegistrationSettings> ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private ThumbReg.tlpSecurity.Request RequestField;
        
        private ThumbReg.tlpSecurity.ExecutionStatus ResponseStateField;
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.APIMessage> MessagesField;
        
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.TimeRegistrationSettings> Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ThumbReg.tlpSecurity.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ThumbReg.tlpSecurity.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.APIMessage> Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeRegistrationSettings", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Security.V1_0")]
    public partial class TimeRegistrationSettings : ThumbReg.tlpSecurity.APIBase {
        
        private bool UseCaseSensetiveLoginField;
        
        private bool UseWBSField;
        
        private bool UseTaskUniqueIDField;
        
        private bool CustomerSortByNoField;
        
        private bool ProjectSortByNoField;
        
        private int FormatingLCIDField;
        
        private bool UseStartEndTimeField;
        
        private bool TimeTrackingShowCustomerNoField;
        
        private bool TimeTrackingShowCustomerNameField;
        
        private bool TimeTrackingShowProjectNoField;
        
        private bool TimeTrackingShowWBSField;
        
        private bool TimeTrackingShowTaskIDField;
        
        private bool AllowTimetrackingOnAllActiveProjectsField;
        
        private bool TimeTrackingAllowRegistrationOverlapField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseCaseSensetiveLogin {
            get {
                return this.UseCaseSensetiveLoginField;
            }
            set {
                if ((this.UseCaseSensetiveLoginField.Equals(value) != true)) {
                    this.UseCaseSensetiveLoginField = value;
                    this.RaisePropertyChanged("UseCaseSensetiveLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseWBS {
            get {
                return this.UseWBSField;
            }
            set {
                if ((this.UseWBSField.Equals(value) != true)) {
                    this.UseWBSField = value;
                    this.RaisePropertyChanged("UseWBS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool UseTaskUniqueID {
            get {
                return this.UseTaskUniqueIDField;
            }
            set {
                if ((this.UseTaskUniqueIDField.Equals(value) != true)) {
                    this.UseTaskUniqueIDField = value;
                    this.RaisePropertyChanged("UseTaskUniqueID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool CustomerSortByNo {
            get {
                return this.CustomerSortByNoField;
            }
            set {
                if ((this.CustomerSortByNoField.Equals(value) != true)) {
                    this.CustomerSortByNoField = value;
                    this.RaisePropertyChanged("CustomerSortByNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool ProjectSortByNo {
            get {
                return this.ProjectSortByNoField;
            }
            set {
                if ((this.ProjectSortByNoField.Equals(value) != true)) {
                    this.ProjectSortByNoField = value;
                    this.RaisePropertyChanged("ProjectSortByNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int FormatingLCID {
            get {
                return this.FormatingLCIDField;
            }
            set {
                if ((this.FormatingLCIDField.Equals(value) != true)) {
                    this.FormatingLCIDField = value;
                    this.RaisePropertyChanged("FormatingLCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool UseStartEndTime {
            get {
                return this.UseStartEndTimeField;
            }
            set {
                if ((this.UseStartEndTimeField.Equals(value) != true)) {
                    this.UseStartEndTimeField = value;
                    this.RaisePropertyChanged("UseStartEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public bool TimeTrackingShowCustomerNo {
            get {
                return this.TimeTrackingShowCustomerNoField;
            }
            set {
                if ((this.TimeTrackingShowCustomerNoField.Equals(value) != true)) {
                    this.TimeTrackingShowCustomerNoField = value;
                    this.RaisePropertyChanged("TimeTrackingShowCustomerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public bool TimeTrackingShowCustomerName {
            get {
                return this.TimeTrackingShowCustomerNameField;
            }
            set {
                if ((this.TimeTrackingShowCustomerNameField.Equals(value) != true)) {
                    this.TimeTrackingShowCustomerNameField = value;
                    this.RaisePropertyChanged("TimeTrackingShowCustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public bool TimeTrackingShowProjectNo {
            get {
                return this.TimeTrackingShowProjectNoField;
            }
            set {
                if ((this.TimeTrackingShowProjectNoField.Equals(value) != true)) {
                    this.TimeTrackingShowProjectNoField = value;
                    this.RaisePropertyChanged("TimeTrackingShowProjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public bool TimeTrackingShowWBS {
            get {
                return this.TimeTrackingShowWBSField;
            }
            set {
                if ((this.TimeTrackingShowWBSField.Equals(value) != true)) {
                    this.TimeTrackingShowWBSField = value;
                    this.RaisePropertyChanged("TimeTrackingShowWBS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public bool TimeTrackingShowTaskID {
            get {
                return this.TimeTrackingShowTaskIDField;
            }
            set {
                if ((this.TimeTrackingShowTaskIDField.Equals(value) != true)) {
                    this.TimeTrackingShowTaskIDField = value;
                    this.RaisePropertyChanged("TimeTrackingShowTaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool AllowTimetrackingOnAllActiveProjects {
            get {
                return this.AllowTimetrackingOnAllActiveProjectsField;
            }
            set {
                if ((this.AllowTimetrackingOnAllActiveProjectsField.Equals(value) != true)) {
                    this.AllowTimetrackingOnAllActiveProjectsField = value;
                    this.RaisePropertyChanged("AllowTimetrackingOnAllActiveProjects");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public bool TimeTrackingAllowRegistrationOverlap {
            get {
                return this.TimeTrackingAllowRegistrationOverlapField;
            }
            set {
                if ((this.TimeTrackingAllowRegistrationOverlapField.Equals(value) != true)) {
                    this.TimeTrackingAllowRegistrationOverlapField = value;
                    this.RaisePropertyChanged("TimeTrackingAllowRegistrationOverlap");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfUser", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public partial class ResponseOfUser : ThumbReg.tlpSecurity.APIBase {
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.User> ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private ThumbReg.tlpSecurity.Request RequestField;
        
        private ThumbReg.tlpSecurity.ExecutionStatus ResponseStateField;
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.APIMessage> MessagesField;
        
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.User> Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ThumbReg.tlpSecurity.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ThumbReg.tlpSecurity.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.APIMessage> Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Security.V1_0")]
    public partial class User : ThumbReg.tlpSecurity.APIBase {
        
        private int IDField;
        
        private string InitialsField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private int LanguageIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.Role> RolesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.Role> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityToken", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Security.V1_0")]
    public partial class SecurityToken : ThumbReg.tlpSecurity.APIBase {
        
        private string InitialsField;
        
        private System.DateTime ExpiresField;
        
        private string HashField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime Expires {
            get {
                return this.ExpiresField;
            }
            set {
                if ((this.ExpiresField.Equals(value) != true)) {
                    this.ExpiresField = value;
                    this.RaisePropertyChanged("Expires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfSecurityToken", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public partial class ResponseOfSecurityToken : ThumbReg.tlpSecurity.APIBase {
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.SecurityToken> ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private ThumbReg.tlpSecurity.Request RequestField;
        
        private ThumbReg.tlpSecurity.ExecutionStatus ResponseStateField;
        
        private System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.APIMessage> MessagesField;
        
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.SecurityToken> Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public ThumbReg.tlpSecurity.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public ThumbReg.tlpSecurity.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.APIMessage> Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionStatus", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Common")]
    public enum ExecutionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessage", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public partial class APIMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        private ThumbReg.tlpSecurity.APIMessageSeverity SeverityField;
        
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ThumbReg.tlpSecurity.APIMessageSeverity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestParameter", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.ResponseOfSecurityToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.APIBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.RequestParameter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.APIMessage>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.APIMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.APIMessageSeverity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.ResponseOfTimeRegistrationSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.ResponseOfUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.SecurityToken>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.SecurityToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.TimeRegistrationSettings>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.TimeRegistrationSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.User>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.ExecutionStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ThumbReg.tlpSecurity.Role>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ThumbReg.tlpSecurity.Role))]
    public partial class RequestParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessageSeverity", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public enum APIMessageSeverity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Security")]
    public enum Role : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalContractor = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalSalesperson = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TeamLeader = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectMember = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesPerson = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectManager = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LimitedSectionManager = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SectionManager = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Manager = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAdministrator = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCRM = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserHelpDesk = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserSalary = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectManagement = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerContacts = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTracking = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCanCreateProject = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCanEditOwnProjects = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCanEditAllProjects = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserCanEditOwnDepartmentProjects = 50,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.timelog.com/api/tlp/v1", ConfigurationName="tlpSecurity.SecurityService")]
    public interface SecurityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="IsAliveRequest", ReplyAction="IsAliveReponse")]
        System.IAsyncResult BeginIsAlive(ThumbReg.tlpSecurity.IsAliveRequest request, System.AsyncCallback callback, object asyncState);
        
        ThumbReg.tlpSecurity.IsAliveResponse EndIsAlive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetTokenRequest", ReplyAction="GetTokenReponse")]
        System.IAsyncResult BeginGetToken(ThumbReg.tlpSecurity.GetTokenRequest request, System.AsyncCallback callback, object asyncState);
        
        ThumbReg.tlpSecurity.GetTokenResponse EndGetToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetTimeRegistrationSettingsRequest", ReplyAction="GetTimeRegistrationSettingsReponse")]
        System.IAsyncResult BeginGetTimeRegistrationSettings(ThumbReg.tlpSecurity.GetTimeRegistrationSettingsRequest request, System.AsyncCallback callback, object asyncState);
        
        ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse EndGetTimeRegistrationSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="GetUserRequest", ReplyAction="GetUserReponse")]
        System.IAsyncResult BeginGetUser(ThumbReg.tlpSecurity.GetUserRequest request, System.AsyncCallback callback, object asyncState);
        
        ThumbReg.tlpSecurity.GetUserResponse EndGetUser(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAlive", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class IsAliveRequest {
        
        public IsAliveRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAliveResponse", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class IsAliveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=0)]
        public bool IsAliveResult;
        
        public IsAliveResponse() {
        }
        
        public IsAliveResponse(bool IsAliveResult) {
            this.IsAliveResult = IsAliveResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetToken", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class GetTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=0)]
        public string user;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=1)]
        public string password;
        
        public GetTokenRequest() {
        }
        
        public GetTokenRequest(string user, string password) {
            this.user = user;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTokenResponse", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class GetTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=0)]
        public ThumbReg.tlpSecurity.ResponseOfSecurityToken GetTokenResult;
        
        public GetTokenResponse() {
        }
        
        public GetTokenResponse(ThumbReg.tlpSecurity.ResponseOfSecurityToken GetTokenResult) {
            this.GetTokenResult = GetTokenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeRegistrationSettings", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class GetTimeRegistrationSettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=0)]
        public ThumbReg.tlpSecurity.SecurityToken token;
        
        public GetTimeRegistrationSettingsRequest() {
        }
        
        public GetTimeRegistrationSettingsRequest(ThumbReg.tlpSecurity.SecurityToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTimeRegistrationSettingsResponse", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class GetTimeRegistrationSettingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=0)]
        public ThumbReg.tlpSecurity.ResponseOfTimeRegistrationSettings GetTimeRegistrationSettingsResult;
        
        public GetTimeRegistrationSettingsResponse() {
        }
        
        public GetTimeRegistrationSettingsResponse(ThumbReg.tlpSecurity.ResponseOfTimeRegistrationSettings GetTimeRegistrationSettingsResult) {
            this.GetTimeRegistrationSettingsResult = GetTimeRegistrationSettingsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUser", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class GetUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=0)]
        public ThumbReg.tlpSecurity.SecurityToken token;
        
        public GetUserRequest() {
        }
        
        public GetUserRequest(ThumbReg.tlpSecurity.SecurityToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUserResponse", WrapperNamespace="http://www.timelog.com/api/tlp/v1", IsWrapped=true)]
    public partial class GetUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1", Order=0)]
        public ThumbReg.tlpSecurity.ResponseOfUser GetUserResult;
        
        public GetUserResponse() {
        }
        
        public GetUserResponse(ThumbReg.tlpSecurity.ResponseOfUser GetUserResult) {
            this.GetUserResult = GetUserResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SecurityServiceChannel : ThumbReg.tlpSecurity.SecurityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsAliveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsAliveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ThumbReg.tlpSecurity.IsAliveResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ThumbReg.tlpSecurity.IsAliveResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ThumbReg.tlpSecurity.GetTokenResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ThumbReg.tlpSecurity.GetTokenResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeRegistrationSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeRegistrationSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ThumbReg.tlpSecurity.GetUserResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ThumbReg.tlpSecurity.GetUserResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecurityServiceClient : System.ServiceModel.ClientBase<ThumbReg.tlpSecurity.SecurityService>, ThumbReg.tlpSecurity.SecurityService {
        
        private BeginOperationDelegate onBeginIsAliveDelegate;
        
        private EndOperationDelegate onEndIsAliveDelegate;
        
        private System.Threading.SendOrPostCallback onIsAliveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTokenDelegate;
        
        private EndOperationDelegate onEndGetTokenDelegate;
        
        private System.Threading.SendOrPostCallback onGetTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeRegistrationSettingsDelegate;
        
        private EndOperationDelegate onEndGetTimeRegistrationSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeRegistrationSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SecurityServiceClient() {
        }
        
        public SecurityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecurityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<IsAliveCompletedEventArgs> IsAliveCompleted;
        
        public event System.EventHandler<GetTokenCompletedEventArgs> GetTokenCompleted;
        
        public event System.EventHandler<GetTimeRegistrationSettingsCompletedEventArgs> GetTimeRegistrationSettingsCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ThumbReg.tlpSecurity.SecurityService.BeginIsAlive(ThumbReg.tlpSecurity.IsAliveRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsAlive(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ThumbReg.tlpSecurity.IsAliveResponse ThumbReg.tlpSecurity.SecurityService.EndIsAlive(System.IAsyncResult result) {
            return base.Channel.EndIsAlive(result);
        }
        
        private System.IAsyncResult OnBeginIsAlive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ThumbReg.tlpSecurity.IsAliveRequest request = ((ThumbReg.tlpSecurity.IsAliveRequest)(inValues[0]));
            return ((ThumbReg.tlpSecurity.SecurityService)(this)).BeginIsAlive(request, callback, asyncState);
        }
        
        private object[] OnEndIsAlive(System.IAsyncResult result) {
            ThumbReg.tlpSecurity.IsAliveResponse retVal = ((ThumbReg.tlpSecurity.SecurityService)(this)).EndIsAlive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsAliveCompleted(object state) {
            if ((this.IsAliveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsAliveCompleted(this, new IsAliveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsAliveAsync(ThumbReg.tlpSecurity.IsAliveRequest request) {
            this.IsAliveAsync(request, null);
        }
        
        public void IsAliveAsync(ThumbReg.tlpSecurity.IsAliveRequest request, object userState) {
            if ((this.onBeginIsAliveDelegate == null)) {
                this.onBeginIsAliveDelegate = new BeginOperationDelegate(this.OnBeginIsAlive);
            }
            if ((this.onEndIsAliveDelegate == null)) {
                this.onEndIsAliveDelegate = new EndOperationDelegate(this.OnEndIsAlive);
            }
            if ((this.onIsAliveCompletedDelegate == null)) {
                this.onIsAliveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsAliveCompleted);
            }
            base.InvokeAsync(this.onBeginIsAliveDelegate, new object[] {
                        request}, this.onEndIsAliveDelegate, this.onIsAliveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ThumbReg.tlpSecurity.SecurityService.BeginGetToken(ThumbReg.tlpSecurity.GetTokenRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetToken(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ThumbReg.tlpSecurity.GetTokenResponse ThumbReg.tlpSecurity.SecurityService.EndGetToken(System.IAsyncResult result) {
            return base.Channel.EndGetToken(result);
        }
        
        private System.IAsyncResult OnBeginGetToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ThumbReg.tlpSecurity.GetTokenRequest request = ((ThumbReg.tlpSecurity.GetTokenRequest)(inValues[0]));
            return ((ThumbReg.tlpSecurity.SecurityService)(this)).BeginGetToken(request, callback, asyncState);
        }
        
        private object[] OnEndGetToken(System.IAsyncResult result) {
            ThumbReg.tlpSecurity.GetTokenResponse retVal = ((ThumbReg.tlpSecurity.SecurityService)(this)).EndGetToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTokenCompleted(object state) {
            if ((this.GetTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTokenCompleted(this, new GetTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTokenAsync(ThumbReg.tlpSecurity.GetTokenRequest request) {
            this.GetTokenAsync(request, null);
        }
        
        public void GetTokenAsync(ThumbReg.tlpSecurity.GetTokenRequest request, object userState) {
            if ((this.onBeginGetTokenDelegate == null)) {
                this.onBeginGetTokenDelegate = new BeginOperationDelegate(this.OnBeginGetToken);
            }
            if ((this.onEndGetTokenDelegate == null)) {
                this.onEndGetTokenDelegate = new EndOperationDelegate(this.OnEndGetToken);
            }
            if ((this.onGetTokenCompletedDelegate == null)) {
                this.onGetTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTokenCompleted);
            }
            base.InvokeAsync(this.onBeginGetTokenDelegate, new object[] {
                        request}, this.onEndGetTokenDelegate, this.onGetTokenCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ThumbReg.tlpSecurity.SecurityService.BeginGetTimeRegistrationSettings(ThumbReg.tlpSecurity.GetTimeRegistrationSettingsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeRegistrationSettings(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse ThumbReg.tlpSecurity.SecurityService.EndGetTimeRegistrationSettings(System.IAsyncResult result) {
            return base.Channel.EndGetTimeRegistrationSettings(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeRegistrationSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ThumbReg.tlpSecurity.GetTimeRegistrationSettingsRequest request = ((ThumbReg.tlpSecurity.GetTimeRegistrationSettingsRequest)(inValues[0]));
            return ((ThumbReg.tlpSecurity.SecurityService)(this)).BeginGetTimeRegistrationSettings(request, callback, asyncState);
        }
        
        private object[] OnEndGetTimeRegistrationSettings(System.IAsyncResult result) {
            ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse retVal = ((ThumbReg.tlpSecurity.SecurityService)(this)).EndGetTimeRegistrationSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeRegistrationSettingsCompleted(object state) {
            if ((this.GetTimeRegistrationSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeRegistrationSettingsCompleted(this, new GetTimeRegistrationSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeRegistrationSettingsAsync(ThumbReg.tlpSecurity.GetTimeRegistrationSettingsRequest request) {
            this.GetTimeRegistrationSettingsAsync(request, null);
        }
        
        public void GetTimeRegistrationSettingsAsync(ThumbReg.tlpSecurity.GetTimeRegistrationSettingsRequest request, object userState) {
            if ((this.onBeginGetTimeRegistrationSettingsDelegate == null)) {
                this.onBeginGetTimeRegistrationSettingsDelegate = new BeginOperationDelegate(this.OnBeginGetTimeRegistrationSettings);
            }
            if ((this.onEndGetTimeRegistrationSettingsDelegate == null)) {
                this.onEndGetTimeRegistrationSettingsDelegate = new EndOperationDelegate(this.OnEndGetTimeRegistrationSettings);
            }
            if ((this.onGetTimeRegistrationSettingsCompletedDelegate == null)) {
                this.onGetTimeRegistrationSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeRegistrationSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeRegistrationSettingsDelegate, new object[] {
                        request}, this.onEndGetTimeRegistrationSettingsDelegate, this.onGetTimeRegistrationSettingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ThumbReg.tlpSecurity.SecurityService.BeginGetUser(ThumbReg.tlpSecurity.GetUserRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ThumbReg.tlpSecurity.GetUserResponse ThumbReg.tlpSecurity.SecurityService.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ThumbReg.tlpSecurity.GetUserRequest request = ((ThumbReg.tlpSecurity.GetUserRequest)(inValues[0]));
            return ((ThumbReg.tlpSecurity.SecurityService)(this)).BeginGetUser(request, callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            ThumbReg.tlpSecurity.GetUserResponse retVal = ((ThumbReg.tlpSecurity.SecurityService)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync(ThumbReg.tlpSecurity.GetUserRequest request) {
            this.GetUserAsync(request, null);
        }
        
        public void GetUserAsync(ThumbReg.tlpSecurity.GetUserRequest request, object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, new object[] {
                        request}, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ThumbReg.tlpSecurity.SecurityService CreateChannel() {
            return new SecurityServiceClientChannel(this);
        }
        
        private class SecurityServiceClientChannel : ChannelBase<ThumbReg.tlpSecurity.SecurityService>, ThumbReg.tlpSecurity.SecurityService {
            
            public SecurityServiceClientChannel(System.ServiceModel.ClientBase<ThumbReg.tlpSecurity.SecurityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginIsAlive(ThumbReg.tlpSecurity.IsAliveRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("IsAlive", _args, callback, asyncState);
                return _result;
            }
            
            public ThumbReg.tlpSecurity.IsAliveResponse EndIsAlive(System.IAsyncResult result) {
                object[] _args = new object[0];
                ThumbReg.tlpSecurity.IsAliveResponse _result = ((ThumbReg.tlpSecurity.IsAliveResponse)(base.EndInvoke("IsAlive", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetToken(ThumbReg.tlpSecurity.GetTokenRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetToken", _args, callback, asyncState);
                return _result;
            }
            
            public ThumbReg.tlpSecurity.GetTokenResponse EndGetToken(System.IAsyncResult result) {
                object[] _args = new object[0];
                ThumbReg.tlpSecurity.GetTokenResponse _result = ((ThumbReg.tlpSecurity.GetTokenResponse)(base.EndInvoke("GetToken", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeRegistrationSettings(ThumbReg.tlpSecurity.GetTimeRegistrationSettingsRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeRegistrationSettings", _args, callback, asyncState);
                return _result;
            }
            
            public ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse EndGetTimeRegistrationSettings(System.IAsyncResult result) {
                object[] _args = new object[0];
                ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse _result = ((ThumbReg.tlpSecurity.GetTimeRegistrationSettingsResponse)(base.EndInvoke("GetTimeRegistrationSettings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUser(ThumbReg.tlpSecurity.GetUserRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public ThumbReg.tlpSecurity.GetUserResponse EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                ThumbReg.tlpSecurity.GetUserResponse _result = ((ThumbReg.tlpSecurity.GetUserResponse)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
        }
    }
}
